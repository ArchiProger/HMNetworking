{"sections":[],"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hmnetworking\/making-requests"]}],"primaryContentSections":[{"content":[{"anchor":"Making-requests","text":"Making requests","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"After configuring the client, you can send network requests using its methods. And customize them in a declarative style"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    \/\/ Configure request parameters exposed by HttpRequestBuilder","}"]},{"type":"heading","text":"Specify a request URL﻿","level":2,"anchor":"Specify-a-request-URL﻿"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additional setting of the page URL"}]},{"type":"heading","level":3,"text":"Query","anchor":"Query"},{"code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    Query {","        Parameter(name: \"param1\", body: 1)              ","        Parameter(name: \"param2\", body: 2)              ","        Parameter(name: \"param3\", body: 3)              ","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Set request parameters﻿","anchor":"Set-request-parameters﻿","level":2},{"inlineContent":[{"text":"In this section, we’ll see how to specify various request parameters, including an HTTP method, headers.","type":"text"}],"type":"paragraph"},{"anchor":"Specify-an-HTTP-method","type":"heading","text":"Specify an HTTP method","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"When calling the request function, you can specify the desired HTTP method using the "},{"type":"reference","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpMethod","isActive":true},{"type":"text","text":":"}]},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It is worth noting that by default the method is "},{"code":"get","type":"codeVoice"}]}],"style":"note"},{"syntax":"swift","type":"codeListing","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","}"]},{"anchor":"Headers","type":"heading","level":3,"text":"Headers"},{"type":"paragraph","inlineContent":[{"text":"To add headers to the request, you can use the following way:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpHeaders {","        Header(.contentType(\"application\/json; charset=UTF-8\"))","        Header(.defaultUserAgent)","        Header(name: \"custom\", value: \"body\")","    }","}"]},{"level":2,"type":"heading","anchor":"Set-request-body","text":"Set request body"},{"inlineContent":[{"type":"text","text":"To set the request text, you need to use "},{"isActive":true,"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpBody","type":"reference"},{"type":"text","text":". This structure accepts various types of payload, including plain text, instances of arbitrary classes, form data, byte arrays, and so on. Below we will look at some examples."}],"type":"paragraph"},{"anchor":"Binary-data","level":3,"type":"heading","text":"Binary data"},{"syntax":"swift","type":"codeListing","code":["let data: Data = ...","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(data: data)","}"]},{"type":"heading","text":"Text","level":3,"anchor":"Text"},{"syntax":"swift","type":"codeListing","code":["let text = \"Hello, World\"","let data = text.data(using: .utf8)","","guard let data else { throw Exceptios.someException }","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(data: data)","}"]},{"type":"heading","text":"Objects","anchor":"Objects","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"To decode structures to json format, the "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" protocol is used"}]},{"type":"codeListing","syntax":"swift","code":["struct PostDTO: Encodable {","    var id: Int? = nil","    var title: String","    var body: String","    var userId: Int","}","","let post = PostDTO(title: \"Data\", body: \"data serializer\", userId: 1)","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(encodable: post)","}"]},{"text":"Json","anchor":"Json","level":3,"type":"heading"},{"code":["let response = try await client.request(\"\/posts\") {","    HttpMethod(.post)","    HttpBody(json: [","        \"title\": \"Data\",","        \"body\": \"data serializer\",","        \"userId\": 1","    ])","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"identifier":{"url":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/Making-requests","interfaceLanguage":"swift"},"metadata":{"role":"article","title":"Making requests","modules":[{"name":"HMNetworking"}],"roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/HMNetworking\/documentation\/HMNetworking"]]},"references":{"doc://HMNetworking/documentation/HMNetworking":{"role":"collection","type":"topic","kind":"symbol","title":"HMNetworking","url":"\/documentation\/hmnetworking","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking","abstract":[]},"doc://HMNetworking/documentation/HMNetworking/HttpMethod":{"role":"symbol","type":"topic","kind":"symbol","title":"HttpMethod","url":"\/documentation\/hmnetworking\/httpmethod","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpMethod","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HttpMethod","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HttpMethod"}],"abstract":[]},"doc://HMNetworking/documentation/HMNetworking/HttpBody":{"role":"symbol","type":"topic","kind":"symbol","title":"HttpBody","url":"\/documentation\/hmnetworking\/httpbody","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpBody","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HttpBody","kind":"identifier"}],"navigatorTitle":[{"text":"HttpBody","kind":"identifier"}],"abstract":[]}}}