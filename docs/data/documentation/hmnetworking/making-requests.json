{"primaryContentSections":[{"kind":"content","content":[{"text":"Making requests","level":2,"anchor":"Making-requests","type":"heading"},{"inlineContent":[{"text":"After configuring the client, you can send network requests using its methods. And customize them in a declarative style","type":"text"}],"type":"paragraph"},{"code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    \/\/ Configure request parameters exposed by HttpRequestBuilder","}"],"syntax":"swift","type":"codeListing"},{"type":"heading","level":2,"text":"Specify a request URL﻿","anchor":"Specify-a-request-URL﻿"},{"inlineContent":[{"text":"Additional setting of the page URL","type":"text"}],"type":"paragraph"},{"text":"Query","type":"heading","anchor":"Query","level":3},{"type":"codeListing","syntax":"swift","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    Query {","        Parameter(name: \"param1\", body: 1)              ","        Parameter(name: \"param2\", body: 2)              ","        Parameter(name: \"param3\", body: 3)              ","    }","}"]},{"level":2,"type":"heading","anchor":"Set-request-parameters﻿","text":"Set request parameters﻿"},{"inlineContent":[{"type":"text","text":"In this section, we’ll see how to specify various request parameters, including an HTTP method, headers."}],"type":"paragraph"},{"text":"Specify an HTTP method","anchor":"Specify-an-HTTP-method","level":3,"type":"heading"},{"inlineContent":[{"text":"When calling the request function, you can specify the desired HTTP method using the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpMethod"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"It is worth noting that by default the method is "},{"code":"get","type":"codeVoice"}],"type":"paragraph"}],"style":"note"},{"syntax":"swift","type":"codeListing","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","}"]},{"text":"Headers","level":3,"anchor":"Headers","type":"heading"},{"inlineContent":[{"type":"text","text":"To add headers to the request, you can use the following way:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpHeaders {","        Header(.contentType(\"application\/json; charset=UTF-8\"))","        Header(.defaultUserAgent)","        Header(name: \"custom\", value: \"body\")","    }","}"]},{"text":"Set request body","anchor":"Set-request-body","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To set the request text, you need to use "},{"isActive":true,"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpBody","type":"reference"},{"text":". This structure accepts various types of payload, including plain text, instances of arbitrary classes, form data, byte arrays, and so on. Below we will look at some examples.","type":"text"}]},{"text":"Binary data","type":"heading","anchor":"Binary-data","level":3},{"type":"codeListing","syntax":"swift","code":["let data: Data = ...","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(data: data)","}"]},{"text":"Text","anchor":"Text","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let text = \"Hello, World\"","let data = text.data(using: .utf8)","","guard let data else { throw Exceptios.someException }","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(data: data)","}"]},{"anchor":"Objects","text":"Objects","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"To decode structures to json format, the "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" protocol is used"}],"type":"paragraph"},{"type":"codeListing","code":["struct PostDTO: Encodable {","    var id: Int? = nil","    var title: String","    var body: String","    var userId: Int","}","","let post = PostDTO(title: \"Data\", body: \"data serializer\", userId: 1)","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(encodable: post)","}"],"syntax":"swift"},{"text":"Json","level":3,"anchor":"Json","type":"heading"},{"syntax":"swift","type":"codeListing","code":["let response = try await client.request(\"\/posts\") {","    HttpMethod(.post)","    HttpBody(json: [","        \"title\": \"Data\",","        \"body\": \"data serializer\",","        \"userId\": 1","    ])","}"]}]}],"kind":"article","identifier":{"url":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/Making-requests","interfaceLanguage":"swift"},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"HMNetworking"}],"title":"Making requests"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hmnetworking\/making-requests"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/HMNetworking\/documentation\/HMNetworking"]]},"references":{"doc://HMNetworking/documentation/HMNetworking/HttpBody":{"role":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HttpBody","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HttpBody"}],"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpBody","url":"\/documentation\/hmnetworking\/httpbody","type":"topic","title":"HttpBody"},"doc://HMNetworking/documentation/HMNetworking":{"role":"collection","abstract":[],"kind":"symbol","url":"\/documentation\/hmnetworking","title":"HMNetworking","type":"topic","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking"},"doc://HMNetworking/documentation/HMNetworking/HttpMethod":{"role":"symbol","abstract":[],"url":"\/documentation\/hmnetworking\/httpmethod","navigatorTitle":[{"kind":"identifier","text":"HttpMethod"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HttpMethod","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpMethod","kind":"symbol","title":"HttpMethod"}}}