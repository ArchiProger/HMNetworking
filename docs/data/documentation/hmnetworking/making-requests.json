{"metadata":{"modules":[{"name":"HMNetworking"}],"role":"article","roleHeading":"Article","title":"Making requests"},"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Making-requests","text":"Making requests"},{"inlineContent":[{"type":"text","text":"After configuring the client, you can send network requests using its methods. And customize them in a declarative style"}],"type":"paragraph"},{"code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    \/\/ Configure request parameters exposed by HttpRequestBuilder","}"],"type":"codeListing","syntax":"swift"},{"text":"Specify a request URL﻿","type":"heading","anchor":"Specify-a-request-URL﻿","level":2},{"inlineContent":[{"text":"Additional setting of the page URL","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"anchor":"Query","text":"Query"},{"type":"codeListing","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    Query {","        Parameter(name: \"param1\", body: 1)              ","        Parameter(name: \"param2\", body: 2)              ","        Parameter(name: \"param3\", body: 3)              ","    }","}"],"syntax":"swift"},{"level":2,"text":"Set request parameters﻿","anchor":"Set-request-parameters﻿","type":"heading"},{"inlineContent":[{"type":"text","text":"In this section, we’ll see how to specify various request parameters, including an HTTP method, headers."}],"type":"paragraph"},{"text":"Specify an HTTP method","type":"heading","anchor":"Specify-an-HTTP-method","level":3},{"type":"paragraph","inlineContent":[{"text":"When calling the request function, you can specify the desired HTTP method using the ","type":"text"},{"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpMethod","type":"reference","isActive":true},{"type":"text","text":":"}]},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"It is worth noting that by default the method is ","type":"text"},{"code":"get","type":"codeVoice"}]}]},{"code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","}"],"type":"codeListing","syntax":"swift"},{"text":"Headers","level":3,"type":"heading","anchor":"Headers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add headers to the request, you can use the following way:"}]},{"code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpHeaders {","        Header(.contentType(\"application\/json; charset=UTF-8\"))","        Header(.defaultUserAgent)","        Header(name: \"custom\", value: \"body\")","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","anchor":"Set-request-body","text":"Set request body","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"To set the request text, you need to use "},{"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpBody","isActive":true,"type":"reference"},{"type":"text","text":". This structure accepts various types of payload, including plain text, instances of arbitrary classes, form data, byte arrays, and so on. Below we will look at some examples."}]},{"text":"Binary data","type":"heading","level":3,"anchor":"Binary-data"},{"code":["let data: Data = ...","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(data: data)","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Text","text":"Text","type":"heading","level":3},{"syntax":"swift","code":["let text = \"Hello, World\"","let data = text.data(using: .utf8)","","guard let data else { throw Exceptios.someException }","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(data: data)","}"],"type":"codeListing"},{"text":"Objects","level":3,"anchor":"Objects","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"To decode structures to json format, the ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" protocol is used"}]},{"syntax":"swift","type":"codeListing","code":["struct PostDTO: Encodable {","    var id: Int? = nil","    var title: String","    var body: String","    var userId: Int","}","","let post = PostDTO(title: \"Data\", body: \"data serializer\", userId: 1)","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(encodable: post)","}"]},{"type":"heading","text":"Json","anchor":"Json","level":3},{"syntax":"swift","code":["let response = try await client.request(\"\/posts\") {","    HttpMethod(.post)","    HttpBody(json: [","        \"title\": \"Data\",","        \"body\": \"data serializer\",","        \"userId\": 1","    ])","}"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hmnetworking\/making-requests"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/Making-requests"},"kind":"article","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/HMNetworking\/documentation\/HMNetworking"]]},"references":{"doc://HMNetworking/documentation/HMNetworking/HttpMethod":{"role":"symbol","navigatorTitle":[{"text":"HttpMethod","kind":"identifier"}],"type":"topic","title":"HttpMethod","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpMethod","kind":"symbol","url":"\/documentation\/hmnetworking\/httpmethod","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HttpMethod","kind":"identifier"}],"abstract":[]},"doc://HMNetworking/documentation/HMNetworking/HttpBody":{"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpBody","type":"topic","role":"symbol","title":"HttpBody","url":"\/documentation\/hmnetworking\/httpbody","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HttpBody"}],"navigatorTitle":[{"kind":"identifier","text":"HttpBody"}]},"doc://HMNetworking/documentation/HMNetworking":{"role":"collection","abstract":[],"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking","type":"topic","kind":"symbol","title":"HMNetworking","url":"\/documentation\/hmnetworking"}}}