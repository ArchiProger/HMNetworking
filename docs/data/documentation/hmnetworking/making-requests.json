{"kind":"article","identifier":{"url":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/Making-requests","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"text":"Making requests","anchor":"Making-requests","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"After configuring the client, you can send network requests using its methods. And customize them in a declarative style","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    \/\/ Configure request parameters exposed by HttpRequestBuilder","}"]},{"text":"Specify a request URL﻿","anchor":"Specify-a-request-URL﻿","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Additional setting of the page URL"}],"type":"paragraph"},{"level":3,"type":"heading","text":"Query","anchor":"Query"},{"code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    Query {","        Parameter(name: \"param1\", body: 1)              ","        Parameter(name: \"param2\", body: 2)              ","        Parameter(name: \"param3\", body: 3)              ","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Set request parameters﻿","level":2,"anchor":"Set-request-parameters﻿"},{"type":"paragraph","inlineContent":[{"text":"In this section, we’ll see how to specify various request parameters, including an HTTP method, headers.","type":"text"}]},{"level":3,"text":"Specify an HTTP method","type":"heading","anchor":"Specify-an-HTTP-method"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When calling the request function, you can specify the desired HTTP method using the "},{"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpMethod","isActive":true,"type":"reference"},{"type":"text","text":":"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"It is worth noting that by default the method is ","type":"text"},{"type":"codeVoice","code":"get"}]}],"style":"note","name":"Note"},{"code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","}"],"syntax":"swift","type":"codeListing"},{"type":"heading","level":3,"text":"Headers","anchor":"Headers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add headers to the request, you can use the following way:"}]},{"syntax":"swift","type":"codeListing","code":["let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpHeaders {","        Header(.contentType(\"application\/json; charset=UTF-8\"))","        Header(.defaultUserAgent)","        Header(name: \"custom\", value: \"body\")","    }","}"]},{"level":2,"anchor":"Set-request-body","type":"heading","text":"Set request body"},{"inlineContent":[{"type":"text","text":"To set the request text, you need to use "},{"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpBody","type":"reference","isActive":true},{"type":"text","text":". This structure accepts various types of payload, including plain text, instances of arbitrary classes, form data, byte arrays, and so on. Below we will look at some examples."}],"type":"paragraph"},{"level":3,"text":"Binary data","type":"heading","anchor":"Binary-data"},{"type":"codeListing","syntax":"swift","code":["let data: Data = ...","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(data: data)","}"]},{"level":3,"anchor":"Text","text":"Text","type":"heading"},{"syntax":"swift","code":["let text = \"Hello, World\"","let data = text.data(using: .utf8)","","guard let data else { throw Exceptios.someException }","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(data: data)","}"],"type":"codeListing"},{"level":3,"text":"Objects","anchor":"Objects","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To decode structures to json format, the "},{"type":"codeVoice","code":"Encodable"},{"text":" protocol is used","type":"text"}]},{"type":"codeListing","code":["struct PostDTO: Encodable {","    var id: Int? = nil","    var title: String","    var body: String","    var userId: Int","}","","let post = PostDTO(title: \"Data\", body: \"data serializer\", userId: 1)","","let response = try await client.request(\"https:\/\/www.exapmle.com\") {","    HttpMethod(.post)","    HttpBody(encodable: post)","}"],"syntax":"swift"},{"text":"Json","type":"heading","level":3,"anchor":"Json"},{"type":"codeListing","syntax":"swift","code":["let response = try await client.request(\"\/posts\") {","    HttpMethod(.post)","    HttpBody(json: [","        \"title\": \"Data\",","        \"body\": \"data serializer\",","        \"userId\": 1","    ])","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/HMNetworking\/documentation\/HMNetworking"]]},"sections":[],"variants":[{"paths":["\/documentation\/hmnetworking\/making-requests"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"HMNetworking"}],"roleHeading":"Article","role":"article","title":"Making requests"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://HMNetworking/documentation/HMNetworking":{"abstract":[],"type":"topic","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking","kind":"symbol","role":"collection","title":"HMNetworking","url":"\/documentation\/hmnetworking"},"doc://HMNetworking/documentation/HMNetworking/HttpMethod":{"url":"\/documentation\/hmnetworking\/httpmethod","title":"HttpMethod","type":"topic","role":"symbol","abstract":[],"navigatorTitle":[{"text":"HttpMethod","kind":"identifier"}],"identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpMethod","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HttpMethod","kind":"identifier"}],"kind":"symbol"},"doc://HMNetworking/documentation/HMNetworking/HttpBody":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/HMNetworking\/documentation\/HMNetworking\/HttpBody","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HttpBody"}],"navigatorTitle":[{"text":"HttpBody","kind":"identifier"}],"title":"HttpBody","url":"\/documentation\/hmnetworking\/httpbody"}}}